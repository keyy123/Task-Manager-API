    These are the example MongoDB node driver commands to Create - Read - Update - Delete
    
    // db.collection('tasks').insertMany([
    //     {task: "Clean Room", done: false},
    //     {task: "Buy Food", done: true},
    //     {task: "Shower", done: false},
    //     {task: "Hang up clean clothes", done: false},
    //     {task: "Workout", done: false}
    // ],(error, result)=>{
    //     if(error){
    //         return console.log('Unable to insert documents into collection')
    //     }
    //     return console.log(`Inserted ${result.insertedCount} documents into collection`)
    // })

    // db.collection('tasks').find({done:false}).toArray((error, result)=>{
    //     if(error){
    //         return console.log('Unable to find documents matching that query')
    //     }
    //     console.log(result)
    // })

    // db.collection('tasks').findOne(new ObjectId('61c2c9b366a650e7fe7a9cd7'), (error,result)=>{
    //     if(error){
    //         return console.log('Unable to find a document with that ID')
    //     }
    //     console.log(result)
    // })


// const dbPromise = db.collection('users').updateOne({_id: new ObjectId("61c2b8d249ef765899052852")},{$set:{name:"Bryant Mitchell", age:50}})

// dbPromise.then((result)=>{
//     return console.log(chalk.bgGreen('updated document successfully. Check Robo3T! :)',Object.entries(result)))
// }).catch((error)=>{
//     return console.log(chalk.bgRedBright('Unable to update the document...', error))
// })
// })
// db.collection('users')
// .updateOne({_id: new ObjectId("61c2b8d249ef765899052852")},
// {$set:{name:"Bryant Mitchell", age:50}})
// .then((result)=>{
// return console.log(chalk.bgGreen("updated document successfully. Check Robo3T! :)", Object.entries(result)))
// }).catch((error)=>{
// return console.log(chalk.bgRed("Unable to update the document...", error))
// })

// db.collection('tasks').updateMany({done:false},{$set:{done:true}})
// .then((result)=>{
//     return console.log(chalk.blueBright.underline.inverse('You did your tasks!Woo!!', result.acknowledged))
// }
// ).catch((error)=>{
//     return console.log(chalk.bgRedBright('Error',error))
// })

// db.collection('users').deleteMany(
//     {age:{$lt:23}}
// ).then((result)=>{
// return console.log(result.deletedCount)
// }).catch((error)=>{
// return console.log(error)
// })

// db.collection('tasks').deleteOne(
//     {task:"Workout"}
// ).then((result)=>{
//     return console.log(result.deletedCount)
// }).catch((error)=>{
//     return console.log(error)
// })

